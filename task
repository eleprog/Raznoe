0.0 Дано три числа a,b,c, максимальное из них уменьшить на 2, минимальное увеличить на 2.

0.1 Функция создания целочисленного массива и заполнения его случайными значениями в заданном диапазоне;(+)
0.2 Функция заполнения целочисленого массива случайными значениями в заданном диапазоне;(+)

0.3 Написать функцию удаления четных цифр в числе(*)
0.4 Написать функцию, которая проверяет, является ли заданное положительное число простым. (Использовать Math.abs(int a) - функция abs класса Math, которая возвращает абсолютное значение заданного числа)(*)

1.  Написать функцию поиска заданного элемента в целочисленном массиве(*);
1.1 Написать функцию поиска минимального значения в массиве (функция возвращает позицию минимального элемента в массиве. Если элемента нет - возвращает -1(несуществующая позиция))(*);
1.2 Написать функцию подсчета суммы элементов массива;(*)
1.3 Написать функцию подсчета произведения элементов массива;(*)
1.4 Написать функцию, которая  определяет число, встречающееся максимальное количество раз;(**)


2. Написать функцию сортировки массива;

2.1   - Сортировка методом пузырька(*)
2.1.1 - Сортировка пузырьком с улучшением(запоминаем позицию последнего обмена);(**)
2.1.2 - Шейкерная сортировка(Пузырек с улучшением. Реализуется два прохода: слева направо  - всплывает "тяжелый" элемент. справа налево - всплывает "легий элемент"
	В обоих проходах запоминаем позицию последнего обмена)(***)
2.2 - Сортировка методом прямой вставки(*)


3. Написать функцию проверки типа массива (возрастание, убывание, равенство)(+)(*) 

Матрицы

4.   Дано матрица NxM, найти позицию минимального элемента.(*) (+)(Оформить в виде функции)
4.1. Определить сумму элементов главной диагонали + элементов под побочной диагональю. (*) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму

100000
110000
111000
111100
111110
111111

4.2. Определить сумму элементов побочной диагонали + элементов под побочной диагональю. (*) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму
000001
000011
000111
001111
011111
111111

4.3. Определить сумму элементов закрашенной области(крест)(*) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму(четный размер)
100001
010010
001100
001100
010010
100001

Например, рассмотрим матрицу 7x7: единицами отмечаются элементы, которые входят в сумму(нечетный размер)

1000001
0100010
0010100
0001000
0010100
0100010
1000001

4.4.Определить сумму элементов закрашенной области(песочные часы)(*) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму(четный размер)

111111
011110
001100
001100
011110
111111

Например, рассмотрим матрицу 7x7: единицами отмечаются элементы, которые входят в сумму(нечетный размер)
1111111
0111110
0011100
0001000
0011100
0111110
1111111



4.5.Определить сумму элементов закрашенной области(Ромб)(**) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму(четный размер)

001100
011110
111111
011110
011110
001100

Например, рассмотрим матрицу 7x7: единицами отмечаются элементы, которые входят в сумму(нечетный размер)
0001000
0011100
0111110
1111111
0111110
0011100
0001000

4.6.Определить сумму элементов закрашенной области(треугольник)(*) Оформить в виде функции
Например, рассмотрим матрицу 6x6: единицами отмечаются элементы, которые входят в сумму(четный размер)

001100
011110
111111
000000
000000
000000

Например, рассмотрим матрицу 7x7: единицами отмечаются элементы, которые входят в сумму(нечетный размер)
0001000
0011100
0111110
0000000
0000000
0000000
0000000


5. Дан граф, представленный матрицой смежности размерности (NxN).
Определить, существует ли путь  в графе из заданной вершины A  в вершину B. (***). 
